{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","monsters","players","items","playerLocations","chestLocations","monsterLocations","itemLocations","itemData","locations","parseMapData","setupEventListeners","setupSpawners","levelData","layers","forEach","layer","name","objects","obj","push","x","y","properties","spawner","on","socket","id","emit","token","frame","process","env","BYPASS_AUTH","decoded","jwt","verify","JWT_SECRET","user","spawnPlayer","broadcast","error","console","log","message","email","ChatModel","create","playerData","flipX","playerAttacking","currentDirection","itemId","removeItem","canPickupItem","addItem","spawnerId","removeObject","chestId","gold","updateGold","monsterId","attack","playerAttackValue","loseHealth","health","updateHealth","playerAttacked","parseInt","respawn","attackedPlayerId","to","config","spawnInterval","limit","spawnerType","SpawnerType","CHEST","Object","keys","key","Spawner","addChest","bind","deleteChest","MONSTER","addMonster","deleteMonster","moveMonsters","ITEM","deleteItem","playerId","player","PlayerModel","chest","monster","item"],"mappings":"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","sourcesContent":["import v4 from 'uuid/v4';\r\nimport jwt from 'jsonwebtoken';\r\nimport PlayerModel from './PlayerModel';\r\nimport * as levelData from '../../public/assets/level/large_level.json';\r\nimport Spawner from './Spawner';\r\nimport { SpawnerType } from './utils';\r\nimport ChatModel from '../models/ChatModel';\r\nimport * as itemData from '../../public/assets/level/tools.json';\r\n\r\nexport default class GameManager {\r\n  constructor(io) {\r\n    this.io = io;\r\n    this.spawners = {};\r\n    this.chests = {};\r\n    this.monsters = {};\r\n    this.players = {};\r\n    this.items = {};\r\n\r\n    this.playerLocations = [];\r\n    this.chestLocations = {};\r\n    this.monsterLocations = {};\r\n    this.itemLocations = itemData.locations;\r\n  }\r\n\r\n  setup() {\r\n    this.parseMapData();\r\n    this.setupEventListeners();\r\n    this.setupSpawners();\r\n  }\r\n\r\n  parseMapData() {\r\n    this.levelData = levelData;\r\n    this.levelData.layers.forEach((layer) => {\r\n      if (layer.name === 'player_locations') {\r\n        layer.objects.forEach((obj) => {\r\n          this.playerLocations.push([obj.x, obj.y]);\r\n        });\r\n      } else if (layer.name === 'monster_locations') {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.monsterLocations[obj.properties.spawner]) {\r\n            this.monsterLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.monsterLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === 'chest_locations') {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.chestLocations[obj.properties.spawner]) {\r\n            this.chestLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.chestLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.io.on('connection', (socket) => {\r\n      // player disconnected\r\n      socket.on('disconnect', () => {\r\n        // delete user data from server\r\n        delete this.players[socket.id];\r\n\r\n        // emit a message to all players to remove this player\r\n        this.io.emit('disconnect', socket.id);\r\n      });\r\n\r\n      socket.on('newPlayer', (token, frame) => {\r\n        try {\r\n          let name = v4();\r\n          if (process.env.BYPASS_AUTH !== 'ENABLED') {\r\n            // validate token, if valid send game information, else reject login\r\n            const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n\r\n            // get the player's name\r\n            ({ name } = decoded.user);\r\n          }\r\n\r\n          // create a new Player\r\n          this.spawnPlayer(socket.id, name, frame);\r\n\r\n          // send the players object to the new player\r\n          socket.emit('currentPlayers', this.players);\r\n\r\n          // send the monsters object to the new player\r\n          socket.emit('currentMonsters', this.monsters);\r\n\r\n          // send the chests object to the new player\r\n          socket.emit('currentChests', this.chests);\r\n\r\n          // send the items object to the new player\r\n          socket.emit('currentItems', this.items);\r\n\r\n          // inform the other players of the new player that joined\r\n          socket.broadcast.emit('spawnPlayer', this.players[socket.id]);\r\n        } catch (error) {\r\n          console.log(error.message);\r\n          socket.emit('invalidToken');\r\n        }\r\n      });\r\n\r\n      socket.on('sendMessage', async (message, token) => {\r\n        try {\r\n          let name = v4();\r\n          let email = '';\r\n\r\n          if (process.env.BYPASS_AUTH !== 'ENABLED') {\r\n            // validate token, if valid send game information, else reject login\r\n            const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n\r\n            // get the player's name\r\n            ({ name, email } = decoded.user);\r\n\r\n            // store the message in the database\r\n            await ChatModel.create({ email, message });\r\n          }\r\n\r\n          // emit the message to all players\r\n          this.io.emit('newMessage', {\r\n            message,\r\n            name,\r\n            frame: this.players[socket.id].frame,\r\n          });\r\n        } catch (error) {\r\n          console.log(error.message);\r\n          socket.emit('invalidToken');\r\n        }\r\n      });\r\n\r\n      socket.on('playerMovement', (playerData) => {\r\n        if (this.players[socket.id]) {\r\n          this.players[socket.id].x = playerData.x;\r\n          this.players[socket.id].y = playerData.y;\r\n          this.players[socket.id].flipX = playerData.flipX;\r\n          this.players[socket.id].playerAttacking = playerData.playerAttacking;\r\n          this.players[socket.id].currentDirection = playerData.currentDirection;\r\n\r\n          // emit a message to all players about the player that moved\r\n          this.io.emit('playerMoved', this.players[socket.id]);\r\n        }\r\n      });\r\n\r\n      socket.on('playerDroppedItem', (itemId) => {\r\n        this.players[socket.id].removeItem(itemId);\r\n        socket.emit('updateItems', this.players[socket.id]);\r\n        socket.broadcast.emit('updatePlayersItems', socket.id, this.players[socket.id]);\r\n      });\r\n\r\n      socket.on('pickUpItem', (itemId) => {\r\n        // update the spawner\r\n        if (this.items[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(this.items[itemId]);\r\n            socket.emit('updateItems', this.players[socket.id]);\r\n            socket.broadcast.emit('updatePlayersItems', socket.id, this.players[socket.id]);\r\n\r\n            // removing the item\r\n            this.spawners[this.items[itemId].spawnerId].removeObject(itemId);\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on('pickUpChest', (chestId) => {\r\n        // update the spawner\r\n        if (this.chests[chestId]) {\r\n          const { gold } = this.chests[chestId];\r\n\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit('updateScore', this.players[socket.id].gold);\r\n          socket.broadcast.emit('updatePlayersScore', socket.id, this.players[socket.id].gold);\r\n\r\n          // removing the chest\r\n          this.spawners[this.chests[chestId].spawnerId].removeObject(chestId);\r\n        }\r\n      });\r\n\r\n      socket.on('monsterAttacked', (monsterId) => {\r\n        // update the spawner\r\n        if (this.monsters[monsterId]) {\r\n          const { gold, attack } = this.monsters[monsterId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health monster model\r\n          this.monsters[monsterId].loseHealth(playerAttackValue);\r\n\r\n          // check the monsters health, and if dead remove that object\r\n          if (this.monsters[monsterId].health <= 0) {\r\n            // updating the players gold\r\n            this.players[socket.id].updateGold(gold);\r\n            socket.emit('updateScore', this.players[socket.id].gold);\r\n\r\n            // removing the monster\r\n            this.spawners[this.monsters[monsterId].spawnerId].removeObject(monsterId);\r\n            this.io.emit('monsterRemoved', monsterId);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\r\n          } else {\r\n            // update the players health\r\n            this.players[socket.id].playerAttacked(attack);\r\n            this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\r\n\r\n            // update the monsters health\r\n            this.io.emit('updateMonsterHealth', monsterId, this.monsters[monsterId].health);\r\n\r\n            // check the player's health, if below 0 have the player respawn\r\n            if (this.players[socket.id].health <= 0) {\r\n              // update the gold the player has\r\n              this.players[socket.id].updateGold(parseInt(-this.players[socket.id].gold / 2, 10));\r\n              socket.emit('updateScore', this.players[socket.id].gold);\r\n\r\n              // respawn the player\r\n              this.players[socket.id].respawn(this.players);\r\n              this.io.emit('respawnPlayer', this.players[socket.id]);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on('attackedPlayer', (attackedPlayerId) => {\r\n        if (this.players[attackedPlayerId]) {\r\n          // get required info from attacked player\r\n          const { gold } = this.players[attackedPlayerId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health from attacked player\r\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n          // check attacked players health, if dead send gold to other player\r\n          if (this.players[attackedPlayerId].health <= 0) {\r\n            // get the amount of gold, and update player object\r\n            this.players[socket.id].updateGold(gold);\r\n\r\n            // respawn attacked player\r\n            this.players[attackedPlayerId].respawn(this.players);\r\n            this.io.emit('respawnPlayer', this.players[attackedPlayerId]);\r\n\r\n            // send update gold message to player\r\n            socket.emit('updateScore', this.players[socket.id].gold);\r\n\r\n            // reset the attacked players gold\r\n            this.players[attackedPlayerId].updateGold(-gold);\r\n            this.io.to(`${attackedPlayerId}`).emit('updateScore', this.players[attackedPlayerId].gold);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\r\n          } else {\r\n            this.io.emit('updatePlayerHealth', attackedPlayerId, this.players[attackedPlayerId].health);\r\n          }\r\n        }\r\n      });\r\n\r\n      // player connected to our game\r\n      console.log('player connected to our game');\r\n      console.log(socket.id);\r\n    });\r\n  }\r\n\r\n  setupSpawners() {\r\n    const config = {\r\n      spawnInterval: 3000,\r\n      limit: 3,\r\n      spawnerType: SpawnerType.CHEST,\r\n      id: '',\r\n    };\r\n    let spawner;\r\n\r\n    // create chest spawners\r\n    Object.keys(this.chestLocations).forEach((key) => {\r\n      config.id = `chest-${key}`;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.chestLocations[key],\r\n        this.addChest.bind(this),\r\n        this.deleteChest.bind(this),\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create monster spawners\r\n    Object.keys(this.monsterLocations).forEach((key) => {\r\n      config.id = `monster-${key}`;\r\n      config.spawnerType = SpawnerType.MONSTER;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.monsterLocations[key],\r\n        this.addMonster.bind(this),\r\n        this.deleteMonster.bind(this),\r\n        this.moveMonsters.bind(this),\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create item spawner\r\n    config.id = 'item';\r\n    config.spawnerType = SpawnerType.ITEM;\r\n    config.limit = 3;\r\n    config.spawnInterval = 1000 * 60 * 5;\r\n    spawner = new Spawner(\r\n      config,\r\n      this.itemLocations,\r\n      this.addItem.bind(this),\r\n      this.deleteItem.bind(this),\r\n    );\r\n    this.spawners[spawner.id] = spawner;\r\n  }\r\n\r\n  spawnPlayer(playerId, name, frame) {\r\n    const player = new PlayerModel(playerId, this.playerLocations, this.players, name, frame);\r\n    this.players[playerId] = player;\r\n  }\r\n\r\n  addChest(chestId, chest) {\r\n    this.chests[chestId] = chest;\r\n    this.io.emit('chestSpawned', chest);\r\n  }\r\n\r\n  deleteChest(chestId) {\r\n    delete this.chests[chestId];\r\n    this.io.emit('chestRemoved', chestId);\r\n  }\r\n\r\n  addMonster(monsterId, monster) {\r\n    this.monsters[monsterId] = monster;\r\n    this.io.emit('monsterSpawned', monster);\r\n  }\r\n\r\n  deleteMonster(monsterId) {\r\n    delete this.monsters[monsterId];\r\n    this.io.emit('monsterRemoved', monsterId);\r\n  }\r\n\r\n  moveMonsters() {\r\n    this.io.emit('monsterMovement', this.monsters);\r\n  }\r\n\r\n  addItem(itemId, item) {\r\n    this.items[itemId] = item;\r\n    this.io.emit('itemSpawned', item);\r\n  }\r\n\r\n  deleteItem(itemId) {\r\n    delete this.items[itemId];\r\n    this.io.emit('itemRemoved', itemId);\r\n  }\r\n}\r\n"],"file":"GameManager.js"}